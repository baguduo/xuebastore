<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/cache
http://www.springframework.org/schema/cache/spring-cache.xsd
">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true"/>
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

	<context:component-scan base-package="com.rollenholt.spring.cache"/>

	<context:annotation-config/>

	<cache:annotation-driven/>

	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="default"/>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="FlightCache"/>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="WeatherCache"/>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="IPlocCache"/>
				</bean>

			</set>
		</property>
	</bean>

	<!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
		<!--<property name="maxIdle" value="${redis.maxIdle}" />-->
		<!--<property name="maxActive" value="${redis.maxActive}" />-->
		<!--<property name="maxWait" value="${redis.maxWait}" />-->
		<!--<property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
	<!--</bean>-->
	<!--<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
		  <!--p:hostName="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:poolConfig-ref="poolConfig" />-->
	<!--<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">-->
		<!--<property name="connectionFactory"   ref="connectionFactory" />-->
	<!--</bean>-->
	<!--<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">-->
		<!--<constructor-arg index="0" ref="poolConfig" />-->
		<!--<constructor-arg index="1">-->
			<!--<list>-->
				<!--<bean class="redis.clients.jedis.JedisShardInfo">-->
					<!--<constructor-arg name="host" value="${redis.uri}" />-->
				<!--</bean>-->
			<!--</list>-->
		<!--</constructor-arg>-->
	<!--</bean>-->


	<!-- 配置redis数据库连接池 -->
	<!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
		<!--<property name="maxTotal" value="${redis.pool.maxActive}" />-->
		<!--<property name="maxIdle" value="${redis.pool.maxIdle}" />-->
		<!--<property name="minIdle" value="${redis.pool.minIdle}" />-->
		<!--<property name="maxWaitMillis" value="${redis.pool.maxWait}" />-->
		<!--<property name="lifo" value="${redis.pool.lifo}" />-->
		<!--<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />-->
	<!--</bean>-->
	<!--&lt;!&ndash; 配置redis共享连接池，业务层主要通过该bean访问redis服务器 &ndash;&gt;-->
	<!--<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">-->
		<!--<constructor-arg index="0" ref="jedisPoolConfig" />-->
		<!--<constructor-arg index="1">-->
			<!--<list>-->
				<!--<bean class="redis.clients.jedis.JedisShardInfo">-->
					<!--<constructor-arg index="0" value="${redis.host}" />-->
					<!--<constructor-arg  index="1" value="${redis.port}" type="int" />-->
				<!--</bean>-->
			<!--</list>-->
		<!--</constructor-arg>-->
	<!--</bean>-->








</beans>